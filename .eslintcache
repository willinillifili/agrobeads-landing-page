[{"/mnt/d/agrobeads-landing-page/src/reportWebVitals.js":"1","/mnt/d/agrobeads-landing-page/src/App/App.js":"2","/mnt/d/agrobeads-landing-page/src/Product/Product.js":"3","/mnt/d/agrobeads-landing-page/src/Blog/Blog.js":"4","/mnt/d/agrobeads-landing-page/src/Home/Home.js":"5","/mnt/d/agrobeads-landing-page/src/Team/Team.js":"6","/mnt/d/agrobeads-landing-page/src/Navbar/Navbar.js":"7","/mnt/d/agrobeads-landing-page/src/data/menuItems.js":"8","/mnt/d/agrobeads-landing-page/src/index.js":"9"},{"size":362,"mtime":1607192662110,"results":"10","hashOfConfig":"11"},{"size":2677,"mtime":1607308139267,"results":"12","hashOfConfig":"11"},{"size":113,"mtime":1607304760649,"results":"13","hashOfConfig":"11"},{"size":104,"mtime":1607307487319,"results":"14","hashOfConfig":"11"},{"size":673,"mtime":1607796975978,"results":"15","hashOfConfig":"11"},{"size":143,"mtime":1607797578801,"results":"16","hashOfConfig":"11"},{"size":1004,"mtime":1607300732159,"results":"17","hashOfConfig":"11"},{"size":647,"mtime":1607298085750,"results":"18","hashOfConfig":"11"},{"size":515,"mtime":1607200127729,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9a85fe",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"/mnt/d/agrobeads-landing-page/src/reportWebVitals.js",[],"/mnt/d/agrobeads-landing-page/src/App/App.js",["42"],"import React from 'react'\nimport Navbar from '../Navbar/Navbar';\nimport Home from '../Home/Home';\nimport Team from '../Team/Team';\nimport Product from '../Product/Product';\nimport Blog from '../Blog/Blog';\nimport app from '../css/App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      navShowing : false,\n    }\n\n    this.handleShowNav = this.handleShowNav.bind(this);\n    this.classToggle = this.classToggle.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  componentDidMount() {\n    const navbar = document.querySelector('nav');\n    const navPanel = document.querySelector('.navigationItems');\n    const app = document.querySelector('.App');\n    const navHoverBreakPoint = document.querySelector('section:nth-child(3)')\n                                       .offsetTop - navbar.offsetHeight;\n    this.setState({\n      app : app,\n      navbar : navbar,\n      navPanel : navPanel,\n      navHoverBreakPoint : navHoverBreakPoint\n    });\n  }\n\n  /**\n    * Toggles the visibility of the navigation when hamburger is clicked.\n    * @param {Element} navItems The element to be toggled.\n  */\n\n  handleShowNav(navItems) {\n    this.classToggle(navItems, 'showNav', this.state.navShowing,);\n    this.setState({ navShowing : !this.state.navShowing});\n  }\n\n  /**\n    Scrolls the screen to the section that was selected in the navbar.\n    @param {Event} e Is an event of type 'click'\n  */\n\n  handleNavClick(e) {\n    e.preventDefault();\n    const sectionID = e.srcElement.id;\n    const sectionPosition = document.querySelector(sectionID).scrollTop;\n    window.scrollTop = sectionPosition;\n  }\n\n  handleScroll() {\n    const scrolledPastBreakpoint = this.state.app.scrollTop > this.state.navHoverBreakPoint;\n    this.classToggle(this.state.navbar, 'navHover', scrolledPastBreakpoint);\n  }\n\n  /**\n    * Alternates between adding and removing a class on an element\n    * @param {Element} element Element object whose classList will be modified\n    * @param {String} className Name of class to be added/removed.\n    * @param {boolean} condition If true, will add the class.\n      Removes it otherwise\n  */\n\n  classToggle(element, className, condition) {\n    const addClass = () => element.classList.add(className);\n    const removeClass = () => element.classList.remove(className);\n    condition ? addClass() : removeClass();\n  }\n\n  render() {\n    return (\n      <div className=\"App\" onScroll={ () => this.handleScroll() }>\n        <Navbar onClick={() => this.handleShowNav(this.state.navPanel)}/>\n        <Home />\n        <Team />\n        <Product />\n        <Blog />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/mnt/d/agrobeads-landing-page/src/Product/Product.js",[],"/mnt/d/agrobeads-landing-page/src/Blog/Blog.js",[],"/mnt/d/agrobeads-landing-page/src/Home/Home.js",["43","44"],"/mnt/d/agrobeads-landing-page/src/Team/Team.js",["45"],"import team from '../css/Team.css';\r\n\r\nfunction Team() {\r\n  return(\r\n    <section id=\"team\">\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Team;\r\n",["46","47"],"/mnt/d/agrobeads-landing-page/src/Navbar/Navbar.js",["48","49"],"/mnt/d/agrobeads-landing-page/src/data/menuItems.js",[],"/mnt/d/agrobeads-landing-page/src/index.js",["50"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\nimport index from './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",{"ruleId":"51","severity":1,"message":"52","line":7,"column":8,"nodeType":"53","messageId":"54","endLine":7,"endColumn":11},{"ruleId":"51","severity":1,"message":"55","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"56","severity":1,"message":"57","line":8,"column":11,"nodeType":"58","endLine":8,"endColumn":51},{"ruleId":"51","severity":1,"message":"59","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"51","severity":1,"message":"64","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":14},{"ruleId":"65","severity":1,"message":"66","line":28,"column":13,"nodeType":"58","endLine":28,"endColumn":52},{"ruleId":"51","severity":1,"message":"67","line":5,"column":8,"nodeType":"53","messageId":"54","endLine":5,"endColumn":13},"no-unused-vars","'app' is defined but never used.","Identifier","unusedVar","'home' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'team' is defined but never used.","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"'navbar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'index' is defined but never used.","no-global-assign","no-unsafe-negation"]